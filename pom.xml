<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>webretail-commons</groupId>
  <artifactId>webretail-commons</artifactId>
  <version>${com.rsinc.webretail.version}</version>
  <name>Webretail Commons</name>
  <description>Common libraries for the webretail project</description>
  
	<properties>
	
		<com.rsinc.webretail.version>0.0.1-SNAPSHOT</com.rsinc.webretail.version>
		<sonar.host.url>http://localhost:9000/sonar</sonar.host.url>
		<jdk.version>1.8</jdk.version>
	
		<!-- maven plugins -->
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<jetty-maven-plugin.version>9.3.0.M2</jetty-maven-plugin.version>
			
		<!-- Logging -->		
	    <slf4j.version>1.7.16</slf4j.version>
	    <log4j.version>2.5</log4j.version>
	       		
		<!-- Spring -->
		<org.springframework.version>4.2.3.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.0.3.RELEASE</org.springframework.security.version>
	
		<!-- persistence -->
		<hibernate.version>5.0.7.Final</hibernate.version>
		<mysql-connector-java.version>5.1.38</mysql-connector-java.version>
	
		<!-- util -->
		<guava.version>17.0</guava.version>
		<javax.mail-api.version>1.5.5</javax.mail-api.version>
		<javaee-api.version>7.0</javaee-api.version>
	
		<!-- testing -->
		<junit.version>4.4</junit.version>

		<!-- tiles -->
		<org.apache.tiles.version>3.0.5</org.apache.tiles.version>
				
		<!-- jsr303 validation dependencies-->
        <hibernate.validator.version>5.2.4.Final</hibernate.validator.version>
        <javax.validation.version>1.1.0.Final</javax.validation.version>		
		
	</properties>  
	  
  	<build>
      <sourceDirectory>src</sourceDirectory>
      <plugins>
      
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      
  		<plugin>
  			<groupId>org.eclipse.jetty</groupId>
  			<artifactId>jetty-maven-plugin</artifactId>
  			<version>${maven-compiler-plugin.version}</version>
			<configuration>
                <webApp>
                    <contextPath>/webretail</contextPath>
                </webApp>
            </configuration>  			
  		</plugin>      
      
<!-- 	  <plugin> -->
<!--          <artifactId>maven-antrun-plugin</artifactId> -->
<!--          <version>1.8</version> -->
<!--          <executions> -->
<!--              <execution> -->
<!--                  <phase>process-classes</phase> -->
<!--                  <configuration> -->
<!--                      <target> -->
<!--                          ANT Task definition -->
<!--                          <java classname="com.rsinc.webretail.b2c.estore.common.tools.JpaSchemaExport" -->
<!--                              fork="true" failonerror="true"> -->
<!--                              <arg value="${persistenceUnitName}" /> -->
<!--                              <arg value="resources/schema-create.sql" /> -->
<!--                              reference to the passed-in classpath reference -->
<!--                              <classpath refid="maven.compile.classpath" /> -->
<!--                          </java> -->
<!--                      </target> -->
<!--                  </configuration> -->
<!--                  <goals> -->
<!--                      <goal>run</goal> -->
<!--                  </goals>                  -->
<!--              </execution> -->
<!--          </executions> -->
<!--       </plugin>       -->
      
    </plugins>
  </build>
  
  <dependencies>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-antrun-plugin</artifactId>
			<version>1.8</version>
		</dependency>
  
        <!-- logging interface -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- Binding for Log4J -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        
        <!-- Log4j API and Core implementation required for binding -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
          
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee-api.version}</version>
		</dependency> 
		
		<dependency>
		  	<groupId>org.springframework</groupId>
		  	<artifactId>spring-core</artifactId>
		  	<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
		    Define this if you need any of these integrations
		-->
				
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>	
		
		<!-- 
		    Bean Factory and JavaBeans utilities (depends on spring-core)
		    Define this if you use Spring Bean APIs (org.springframework.beans.*) 
		-->
				
		<dependency>
		  	<groupId>org.springframework</groupId>
		  	<artifactId>spring-beans</artifactId>
		  	<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) 
		    This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
				
		<dependency>
	  		<groupId>org.springframework</groupId>
	  		<artifactId>spring-context</artifactId>
	  		<version>${org.springframework.version}</version>
	            <exclusions>
	                <!-- Exclude Commons Logging in favor of SLF4j -->
	                <exclusion>
	                    <groupId>commons-logging</groupId>
	                    <artifactId>commons-logging</artifactId>
	                </exclusion>
	            </exclusions>  		
	  	</dependency> 	  	
	  	
		<!--
		    Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
		    (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you need ORM (org.springframework.orm.*)
		-->
			  	
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
				
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-webmvc</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>		  
	    	
		<!--
		    Web application development utilities applicable to both Servlet and Portlet Environments
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
			    	
	    <dependency>
	        <groupId>org.springframework.security</groupId>
	        <artifactId>spring-security-web</artifactId>
	        <version>${org.springframework.security.version}</version>
	    </dependency>
	    
		<!--
		    Support for testing Spring applications with tools such as JUnit and TestNG
		    This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
			    
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>    
	
        <!-- tiles -->
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
            <version>${org.apache.tiles.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-core</artifactId>
            <version>${org.apache.tiles.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-api</artifactId>
            <version>${org.apache.tiles.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-servlet</artifactId>
            <version>${org.apache.tiles.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-template</artifactId>
            <version>${org.apache.tiles.version}</version>
        </dependency>
	        	
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-entitymanager</artifactId>
		    <version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>	
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>	
		
		<!-- utils -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>	
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>
			
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.5.0</version>
		</dependency>	
		
		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>javax.servlet.jsp.jstl-api</artifactId>
			<version>1.2.1</version>
		</dependency>
	
	    <dependency>
	        <groupId>taglibs</groupId>
	        <artifactId>standard</artifactId>
	        <version>1.1.2</version>
	    </dependency>
	    
        <!-- jsr303 validation dependencies-->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>	    
	    
  </dependencies>
  
</project>